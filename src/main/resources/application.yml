# 本地测试ip
dev_host: localhost

# MYSQ 相关配置
spring:
  datasource:
    dynamic:
      primary: mysql #默认数据源
      strict: false #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候回抛出异常,不启动会使用默认数据源.
      datasource:
        mysql:
          url: jdbc:mysql://${dev_host}:3306/major_db?useUnicode=true&characterEncoding=UTF-8&createDatabaseIfNotExist=true&serverTimezone=GMT%2b8
          username: root
          password: rootbbyy
          driver-class-name: com.mysql.cj.jdbc.Driver
        postgres:
          url: jdbc:postgresql://${dev_host}:5432/postgres
          username: postgres
          password: bbyy2020
          driver-class-name: org.postgresql.Driver
      hikari:
        # 最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为min-idle的值
        max-pool-size: 30
        # 连接超时时间:毫秒，小于250毫秒，否则被重置为默认值30秒
        connection-timeout: 30000
        # 最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
        min-idle: 5
        # 空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒。
        # 只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放
        idle-timeout: 30000
        # 连接最大存活时间.不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
        max-lifetime: 30000
        #连接测试查询
        connection-test-query: SELECT 1
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://${dev_host}:3306/major_db?useUnicode=true&characterEncoding=UTF-8&createDatabaseIfNotExist=true&serverTimezone=GMT%2b8
#    username: root
#    password: rootbbyy
  # redis
  redis:
    database: 0
    host: ${dev_host}
    port: 6379
    password:
    timeout: 1000
  # rabbitmq
  rabbitmq:
    host: ${dev_host}
    port: 5672
    username: admin
    password: admin
    virtual-host: my_vhost
  # es
  elasticsearch:
    rest:
      uris:
        - ${dev_host}:9200
  # kafka
  kafka:
    bootstrap-servers: ${dev_host}:9092
    producer:
      retries: 0
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger.ms: 1
    consumer:
      enable-auto-commit: false
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        session.timeout.ms: 15000

  application:
    name: boot-demo
  main:
    allow-bean-definition-overriding: true

mybatis-plus:
  configuration:
    cache-enabled: true
    use-generated-keys: true
    default-executor-type: reuse
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
  type-aliases-package: com.chenxt.bootdemo.**.entity
  mapper-locations: classpath:mapper/**/*Mapper.xml
  global-config:
    db-config:
      logic-delete-field: isDeleted  #全局逻辑删除字段值 3.3.0开始支持，详情看下面。
      logic-delete-value: true # 逻辑已删除值(默认为 1)
      logic-not-delete-value: false # 逻辑未删除值(默认为 0)
  type-handlers-package: com.chenxt.bootdemo.base.handler

logging:
  level:
    root: WARN
    org.springframework.web.servlet.mvc: WARN
    org.springframework.boot.actuate: WARN
  pattern:
    file: "%d [%t] %-5p %c - %m%n"
    console: "%d [%t] %-5p %c - %m%n"
  file:
    max-history: 7
    max-size: 1GB
    path: /tmp/log/${spring.application.name}/output.log

server:
  port: 9080

verifycode:
  mode: 1 #1:允许使用111111，2:不允许使用111111，3:发送短信

canal:
  index:
    user: bootdemo-user-index
  major:
    destination: test
    username:
    password:
    ip: ${dev_host}
    port: 11111
    zkServers: localhost

#kafka:
#  topic:
#    group-id: topicGroupId
#    topic-name:
#      - topic1
#      - topic2
#      - topic3